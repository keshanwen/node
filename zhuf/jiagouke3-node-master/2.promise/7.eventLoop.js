// 事件环干嘛的？
// 计算机分配任务的最小单位什么？ 进程 启动的浏览都是一个进程 （进程里包含着线程）
// 浏览器有多少个进程?  浏览器是多进程的

//  每个页卡都是一个独立的进程 （如果其中一个页卡挂掉了，不会导致整个浏览器挂掉）
//  1.浏览器的主界面 会有一个进程 (每个页卡是一个进程渲染进程)
//  2. 网络进程 请求发送 
//  3. gpu绘图进程
//  4. 插件也是进程

// 浏览器进程：核心的 线程
// 渲染线程 绘图
// js引擎线程 执行js  同时只能执行一个 互斥的  js是单线程的 （如果js是多线程的） 主线程 （js异步的实现靠的还是多线程）
// 在js的执行过程中还会创建一些其他的线程 定时器线程、ajax线程、事件线程 （都是异步的）

// 事件循环线程（目的就是为了调度这些异步任务） 


// 宏任务： 默认js执行 ui页面渲染ajax、 定时器、事件 MessageChannel,setImmediate setImmediate (宏任务)  宏任务队列只有一个
// 微任务：promise mutationObserver (nextTick)

// 每轮js执行的时候都会创建一个微任务队列，这个微任务队列中存放着，当宏任务执行完毕后会清空微任务
// 微任务也是按照顺序执行的，每次宏任务执行完毕后会将所有的微任务清空
// 微任务执行完毕后 ，会在事件队列中取出一个来执行 ，是一个死循环

// 渲染不属于事件环，但是首次渲染是在微任务之后  (requestFrameAnamtion  requestAdleCallback) 我觉得不属于宏任务， 只算页面渲染固定的回调而已

// 默认js执行就是一个宏任务
console.log('a');
setTimeout(() => {
    console.log(1)
}, 0);
Promise.resolve().then(()=>{
    console.log('then1')
    Promise.resolve().then(()=>{
        console.log('then2')
    })
})
